package cursinhoativo;

/**
 *
 * @author JSQLGen
 */
public class MainWindow extends javax.swing.JFrame {

    private dbaccess.DBAccess dbAccess;

    /** Creates new form MainWindow */
    public MainWindow() {
        try {
            dbAccess = new dbaccess.DBAccess();
            initComponents();
            this.setVisible(true);
        } catch(ClassNotFoundException e){
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Erro ao carregar driver JDBC", "Erro", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        } catch(java.sql.SQLException e){
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Erro ao conectar no Banco de Dados", "Erro", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.exit(2);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar = new javax.swing.JMenuBar();
        mArquivo = new javax.swing.JMenu();
        mAlunos = new javax.swing.JMenuItem();
        mCoordenador = new javax.swing.JMenuItem();
        mMateria = new javax.swing.JMenuItem();
        mAdverencia = new javax.swing.JMenuItem();
        mPresenca = new javax.swing.JMenuItem();
        mProfessor = new javax.swing.JMenuItem();
        mPresencaProf = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mSair = new javax.swing.JMenuItem();
        mRelatorio = new javax.swing.JMenu();
        mSQLViewer = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setExtendedState(MAXIMIZED_BOTH);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        mArquivo.setMnemonic('A');
        mArquivo.setText("Arquivo");

        mAlunos.setText("Alunos");
        mAlunos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAlunosActionPerformed(evt);
            }
        });
        mArquivo.add(mAlunos);

        mCoordenador.setText("Coordenador");
        mCoordenador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mCoordenadorActionPerformed(evt);
            }
        });
        mArquivo.add(mCoordenador);

        mMateria.setText("Materia");
        mMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mMateriaActionPerformed(evt);
            }
        });
        mArquivo.add(mMateria);

        mAdverencia.setText("Adverencia");
        mAdverencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAdverenciaActionPerformed(evt);
            }
        });
        mArquivo.add(mAdverencia);

        mPresenca.setText("Presenca");
        mPresenca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mPresencaActionPerformed(evt);
            }
        });
        mArquivo.add(mPresenca);

        mProfessor.setText("Professor");
        mProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mProfessorActionPerformed(evt);
            }
        });
        mArquivo.add(mProfessor);

        mPresencaProf.setText("PresencaProf");
        mPresencaProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mPresencaProfActionPerformed(evt);
            }
        });
        mArquivo.add(mPresencaProf);
        mArquivo.add(jSeparator1);

        mSair.setText("Sair");
        mSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSairActionPerformed(evt);
            }
        });
        mArquivo.add(mSair);

        menuBar.add(mArquivo);

        mRelatorio.setMnemonic('R');
        mRelatorio.setText("Relatórios");

        mSQLViewer.setText("Consulta SQL");
        mSQLViewer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSQLViewerActionPerformed(evt);
            }
        });
        mRelatorio.add(mSQLViewer);

        menuBar.add(mRelatorio);

        setJMenuBar(menuBar);

        setSize(new java.awt.Dimension(800, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(javax.swing.JOptionPane.showConfirmDialog(this, "Deseja sair?", "Questão", javax.swing.JOptionPane.OK_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE) == javax.swing.JOptionPane.OK_OPTION){
            try{
                dbAccess.disconnect();
                this.dispose();
                System.exit(0);
            } catch(java.sql.SQLException e){
                javax.swing.JOptionPane.showMessageDialog(this, "Erro ao desconectar no Banco de Dados", "Erro", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            this.dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    private void mSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSairActionPerformed
        formWindowClosing(null);
    }//GEN-LAST:event_mSairActionPerformed

    private void mSQLViewerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSQLViewerActionPerformed
        new toolbox.SQLViewer(this, dbAccess.getConnection());
    }//GEN-LAST:event_mSQLViewerActionPerformed

    private void mAlunosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mAlunosActionPerformed
        alunos.AlunosTab.showDialog(this, dbAccess.getConnection());
    }//GEN-LAST:event_mAlunosActionPerformed

    private void mCoordenadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mCoordenadorActionPerformed
        coordenador.CoordenadorTab.showDialog(this, dbAccess.getConnection());
    }//GEN-LAST:event_mCoordenadorActionPerformed

    private void mMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mMateriaActionPerformed
        materia.MateriaTab.showDialog(this, dbAccess.getConnection());
    }//GEN-LAST:event_mMateriaActionPerformed

    private void mAdverenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mAdverenciaActionPerformed
        adverencia.AdverenciaTab.showDialog(this, dbAccess.getConnection());
    }//GEN-LAST:event_mAdverenciaActionPerformed

    private void mPresencaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mPresencaActionPerformed
        presenca.PresencaTab.showDialog(this, dbAccess.getConnection());
    }//GEN-LAST:event_mPresencaActionPerformed

    private void mProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mProfessorActionPerformed
        professor.ProfessorTab.showDialog(this, dbAccess.getConnection());
    }//GEN-LAST:event_mProfessorActionPerformed

    private void mPresencaProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mPresencaProfActionPerformed
        presencaprof.PresencaProfTab.showDialog(this, dbAccess.getConnection());
    }//GEN-LAST:event_mPresencaProfActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem mAdverencia;
    private javax.swing.JMenuItem mAlunos;
    private javax.swing.JMenu mArquivo;
    private javax.swing.JMenuItem mCoordenador;
    private javax.swing.JMenuItem mMateria;
    private javax.swing.JMenuItem mPresenca;
    private javax.swing.JMenuItem mPresencaProf;
    private javax.swing.JMenuItem mProfessor;
    private javax.swing.JMenu mRelatorio;
    private javax.swing.JMenuItem mSQLViewer;
    private javax.swing.JMenuItem mSair;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

}
