package presenca;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author JSQLGen
 */
public class PresencaForm extends javax.swing.JDialog {
    private final java.sql.Connection connection;
    private Presenca presenca;

    /** Construtor do form PresencaForm
     * @param parent Janela mãe
     * @param connection Conexão com o BD
     * @param presenca Objeto a ser editado
     */
    public PresencaForm(java.awt.Window parent, java.sql.Connection connection, Presenca presenca) {
        super(parent);
        this.connection = connection;
        this.presenca = presenca;
        initComponents();
        obj2form();
        this.setVisible(true);
    }

    /** Exibe caixa de diálogo para preenchimento dos campos
     * @param parent Janela mãe
     * @param connection Conexão com o BD
     * @param presenca Objeto a ser editado
     * @return the presenca
     */
    public static Presenca showInputDialog(java.awt.Window parent, java.sql.Connection connection, Presenca presenca) {
        return new PresencaForm(parent, connection, presenca).presenca;
    }

    /** Transfere os dados do objeto para o formulário */
    private void obj2form() {
        tId.setText(presenca.getId()==null?"":presenca.getId().toString());
        cAluno.setSelectedItem(presenca.getAluno().getMatricula());
        tEntrada.setText(presenca.getEntradaF("dd/MM/yyyy"));
        tSaida.setText(presenca.getSaidaF("dd/MM/yyyy"));
        tAtraso.setText(""+presenca.getAtraso());
        tObservacao.setText(presenca.getObservacao());
        cCoordenador.setSelectedItem(presenca.getCoordenador().getMatricula());
    }

    /** Transfere os dados do formulário para o objeto */
    private void form2obj() {
        presenca.setId(tId.getText());
        try{
            presenca.setAluno(alunos.AlunosDAO.loadByMatricula(connection, Integer.parseInt(cAluno.getSelectedItem().toString())));
        } catch(java.sql.SQLException e){
            javax.swing.JOptionPane.showMessageDialog(this, "Falha na leitura do banco de dados!\n"+e.getMessage(),"Aviso",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        presenca.setEntradaF("dd/MM/yyyy",tEntrada.getText());
        presenca.setSaidaF("dd/MM/yyyy",tSaida.getText());
        presenca.setAtraso(tAtraso.getText());
        presenca.setObservacao(tObservacao.getText());
        try{
            presenca.setCoordenador(coordenador.CoordenadorDAO.loadByMatricula(connection, Integer.parseInt(cCoordenador.getSelectedItem().toString())));
        } catch(java.sql.SQLException e){
            javax.swing.JOptionPane.showMessageDialog(this, "Falha na leitura do banco de dados!\n"+e.getMessage(),"Aviso",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    /** valida os dados do formulário */
    private String validateForm() {
        String fieldError ="";
        if(cAluno.getSelectedItem()==null) fieldError +="Aluno\n";
        if(Integer.parseInt(tAtraso.getText())<0) fieldError +="Atraso\n";
        if(tObservacao.getText().length()<1) fieldError +="Observacao\n";
        if(cCoordenador.getSelectedItem()==null) fieldError +="Coordenador\n";
        return fieldError;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pData = new javax.swing.JPanel();
        tId = new javax.swing.JLabel();
        cAluno = new javax.swing.JComboBox(alunos.AlunosDAO.loadMatriculaList(connection).toArray());
        tNomeAluno = new javax.swing.JFormattedTextField();
        tEntrada = new javax.swing.JFormattedTextField();
        tSaida = new javax.swing.JFormattedTextField();
        tAtraso = new javax.swing.JFormattedTextField();
        tObservacao = new javax.swing.JFormattedTextField();
        cCoordenador = new javax.swing.JComboBox(coordenador.CoordenadorDAO.loadMatriculaList(connection).toArray());
        tbData = new javax.swing.JTabbedPane();
        pButtons = new javax.swing.JPanel();
        bOk = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Formulário de Presenca");
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pData.setLayout(new java.awt.GridLayout(5, 0));

        tId.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        tId.setBorder(javax.swing.BorderFactory.createTitledBorder("Id"));
        pData.add(tId);

        cAluno.setBorder(javax.swing.BorderFactory.createTitledBorder("Aluno"));
        cAluno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cAlunoFocusLost(evt);
            }
        });
        pData.add(cAluno);

        tNomeAluno.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome do aluno:"));
        pData.add(tNomeAluno);

        tEntrada.setBorder(javax.swing.BorderFactory.createTitledBorder("Entrada"));
        try {
            tEntrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        pData.add(tEntrada);

        tSaida.setBorder(javax.swing.BorderFactory.createTitledBorder("Saida"));
        try {
            tSaida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        pData.add(tSaida);

        tAtraso.setBorder(javax.swing.BorderFactory.createTitledBorder("Atraso"));
        tAtraso.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        tAtraso.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        pData.add(tAtraso);

        tObservacao.setBorder(javax.swing.BorderFactory.createTitledBorder("Observacao"));
        pData.add(tObservacao);

        cCoordenador.setBorder(javax.swing.BorderFactory.createTitledBorder("Coordenador"));
        pData.add(cCoordenador);

        getContentPane().add(pData, java.awt.BorderLayout.NORTH);
        getContentPane().add(tbData, java.awt.BorderLayout.CENTER);

        pButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        bOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_calc-accept-16.png"))); // NOI18N
        bOk.setMnemonic('O');
        bOk.setText("Ok");
        bOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOkActionPerformed(evt);
            }
        });
        pButtons.add(bOk);

        bCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_calc-cancel-16.png"))); // NOI18N
        bCancel.setMnemonic('C');
        bCancel.setText("Cancelar");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });
        pButtons.add(bCancel);

        getContentPane().add(pButtons, java.awt.BorderLayout.SOUTH);

        setSize(new java.awt.Dimension(800, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOkActionPerformed
        String fieldError =validateForm();
        if(fieldError.length()==0) {
            form2obj();
            this.setVisible(false);
            this.dispose();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Verifique os campos seguintes e tente novamente!\n"+fieldError,"Aviso",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bOkActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        presenca = null;
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_bCancelActionPerformed


    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        bCancelActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    private void cAlunoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cAlunoFocusLost
        try {
            Integer matricula = Integer.parseInt(cAluno.getSelectedItem().toString());
            alunos.Alunos aluno = alunos.AlunosDAO.loadByMatricula(connection, matricula);
            tNomeAluno.setText(aluno.getNome());
        } catch (SQLException ex) {
            Logger.getLogger(PresencaForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cAlunoFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bOk;
    private javax.swing.JComboBox cAluno;
    private javax.swing.JComboBox cCoordenador;
    private javax.swing.JPanel pButtons;
    private javax.swing.JPanel pData;
    private javax.swing.JFormattedTextField tAtraso;
    private javax.swing.JFormattedTextField tEntrada;
    private javax.swing.JLabel tId;
    private javax.swing.JFormattedTextField tNomeAluno;
    private javax.swing.JFormattedTextField tObservacao;
    private javax.swing.JFormattedTextField tSaida;
    private javax.swing.JTabbedPane tbData;
    // End of variables declaration//GEN-END:variables
}
